version: "3.8"
services:
  db:
    image: postgres
    restart: always
    volumes:
      - ./django/postgresql/db:/var/lib/postgresql/data
  redis:
    image: redis
    expose:
      - 6379
    command: redis-server --save 60 1 --loglevel warning
  web:
    container_name: web
    image: dgango-gunicorn
    build: 
      context: ./django
    expose:
      - "8000"
    env_file:
      - ./.env/django.env
    volumes:
      - ./django/static:/usr/src/app/static
    depends_on:
      - db
      - redis
    command: make runserver
  nginx:
    image: nginx
    ports:
      - 80:80
      - 443:443
    restart: always
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./django/static:/usr/src/app/static
      - letsencrypt:/etc/letsencrypt
      - certbot:/var/www/certbot
    depends_on:
      - web
  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - letsencrypt:/etc/letsencrypt
      - certbot:/var/www/certbot
    command: certonly --webroot -w /var/www/certbot --force-renewal --email dmitri.sherbak@gmail.com --agree-tos --no-eff-email -d domen
    profiles: ["cli-only"]
  dns:
    container_name: dns
    image: ubuntu/bind9
   #  restart: always
    environment:
      - BIND9_USER=root
    ports:
      - 53:53/tcp
      - 53:53/udp
    volumes:
      - ./dns/config:/etc/bind/
      - ./dns/cache:/var/cache/bind
      - ./dns/records:/var/lib/bind
    depends_on:
      - nginx
    command: named -c /etc/bind/named.conf -g
    profiles: ["cli-only"]
  tests:
    build: .
    command: make test
    environment:
      - POSTGRES_NAME=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    profiles: ["cli-only"]